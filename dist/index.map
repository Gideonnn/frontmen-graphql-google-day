{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,IAAA;;;;AAAA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AAEA,IAAM,QAAQ,GAAG,OAAO,CAAC,yBAAD,CAAxB;;AAEA,IAAM,KAAK,GAAG,YAAA;AAAA,SAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;;AACZ,iBAAA,CAAA;AAAA;AAAA,YAAM,UAAA,CAAA,SAAA,CAAA,CAAS,OAAT,CACJ,6BADI,EAEJ;AAAE,YAAA,eAAe,EAAE;AAAnB,WAFI,CAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AAKM,UAAA,SAAS,GAAG,UAAA,CAAA,SAAA,CAAA,CAAS,KAAT,CAAe,MAAf,EAAuB;AACvC,YAAA,EAAE,EAAE,MADmC;AAEvC,YAAA,SAAS,EAAE,MAF4B;AAGvC,YAAA,QAAQ,EAAE,MAH6B;AAIvC,YAAA,GAAG,EAAE;AAJkC,WAAvB,CAAZ;AAOA,UAAA,SAAS,GAAG;AAChB,YAAA,KAAK,EAAE;AACL,cAAA,KAAK,EAAE,YAAA;AAAA,uBAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;AAAA,yBAAA,WAAA,CAAA,IAAA,EAAA,UAAA,EAAA,EAAA;;;AAAY,+BAAA,CAAA;AAAA;AAAA,0BAAM,SAAS,CAAC,IAAV,EAAN,CAAA;;;AAAA,+BAAA,CAAA;AAAA;AAAA,0BAAA,EAAA,CAAA,IAAA,EAAA,CAAA;;mBAAZ,CAAA;iBAAA,CAAA;AAAkC;AADpC;AADS,WAAZ;AAMA,UAAA,KAAK,GAAG;AACZ,YAAA,IAAI,EAAE,YAAA;AAAM,qBAAC;AACX,gBAAA,EAAE,EAAE,YAAA;AAAM,yBAAA,QAAA,CAAA,SAAA,CAAA,CAAO,MAAP;AAAa,iBADZ;AAEX,gBAAA,SAAS,EAAE,YAAA;AAAM,yBAAA,QAAA,CAAA,SAAA,CAAA,CAAO,UAAP;AAAiB,iBAFvB;AAGX,gBAAA,QAAQ,EAAE,YAAA;AAAM,yBAAA,QAAA,CAAA,SAAA,CAAA,CAAO,SAAP;AAAgB,iBAHrB;AAIX,gBAAA,GAAG,EAAE,YAAA;AAAM,yBAAA,QAAA,CAAA,SAAA,CAAA,CAAO,OAAP,CAAe,CAAf,EAAkB,GAAlB,CAAA;AAAsB;AAJtB,eAAD;AAKV;AANU,WAAR;AASA,UAAA,MAAM,GAAG,IAAI,eAAA,CAAA,YAAJ,CAAiB;AAC9B,YAAA,QAAQ,EAAA,QADsB;AAE9B,YAAA,SAAS,EAAA;AAFqB,WAAjB,CAAT;AAMN,UAAA,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,IAApB,CAAyB,UAAC,EAAD,EAAQ;gBAAL,GAAA,GAAA,EAAA,CAAA;AAC1B,YAAA,OAAO,CAAC,GAAR,CAAY,mCAAuB,GAAnC;AACD,WAFD;;;;;;GAlCY,CAAA;AAqCb,CArCD;;AAuCA,KAAK","file":"index.map","sourceRoot":"../src","sourcesContent":["import { ApolloServer, gql } from 'apollo-server';\nimport mongoose from 'mongoose';\nimport casual from 'casual';\n\nconst typeDefs = require('./schema/schema.graphql');\n\nconst start = async () => {\n  await mongoose.connect(\n    'mongodb://localhost/graphql',\n    { useNewUrlParser: true }\n  );\n\n  const UserModel = mongoose.model('User', {\n    id: String,\n    firstname: String,\n    lastname: String,\n    age: Number,\n  });\n\n  const resolvers = {\n    Query: {\n      users: async () => await UserModel.find(),\n    },\n  };\n\n  const mocks = {\n    User: () => ({\n      id: () => casual.string,\n      firstname: () => casual.first_name,\n      lastname: () => casual.last_name,\n      age: () => casual.integer(0, 100),\n    }),\n  };\n\n  const server = new ApolloServer({\n    typeDefs,\n    resolvers,\n    // mocks,\n  });\n\n  server.listen(4000).then(({ url }) => {\n    console.log(`ğŸš€  Server ready at ${url}`);\n  });\n};\n\nstart();\n"]}